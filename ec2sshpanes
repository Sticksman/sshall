#!/usr/bin/python

import yaml
import sys
import subprocess
import platform

#############################################
# This currently works with ASG names only. #
#############################################

defaultYaml = r'''
windows:
  - name: multi ssh
    root: .
    layout: tiled
    panes:
'''

describe_cmd = '''aws ec2 describe-instances --filter Name="instance-state-name",Values="running" "Name=tag:aws:autoscaling:groupName,Values=*%s*" --query  'Reservations[].Instances[].[PrivateIpAddress]' --output text'''

try:
    termConf = yaml.load(defaultYaml)
    cmd = describe_cmd % sys.argv[1]
    destFile = open(sys.argv[2], 'w+')
    targetCall = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
    targets = targetCall.stdout.readlines()
    panes = termConf['windows'][0]['panes'] = []

    system = platform.system()
    liux_command = ""
    for t in targets:
        if len(t) > 0 and t is not '\n':
            ssh_command = "ssh " + t.strip('\n')
            if system == 'Darwin':
                panes.append(ssh_command)
            if system == 'Linux':
                linux_commands += "'bash %s '" % ssh_command 
    if system == 'Linux':
        subprocess.check_output('terminator-split -e %s localhost' % linux_commands)
    yaml.dump(termConf, destFile, default_flow_style=True, indent=2)
    destFile.close()
except yaml.YAMLError as exc:
    print("Failed to run: ")
    print(exc)
